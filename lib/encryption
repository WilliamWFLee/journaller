encrypt_file() {
  if [[ -z "$PASSPHRASE" ]]; then 
    gpg -c $1
  else
    gpg -c --batch --passphrase "$PASSPHRASE" $1
  fi
}

decrypt_file() {
  local file="$1"
  local decrypted_file="${file/.gpg/}"
  if [[ -f "$decrypted_file" ]]; then
    return 1
  fi

  if ! ( \
    gpg -d -o "$decrypted_file" --batch 
    --passphrase "$PASSPHRASE" "$file" > /dev/null 2>&1 \
  ); then
    return 2
  fi
}

encrypt_dir() {
  local file
  for file in $1/**/!(*.gpg); do
    if [[ -f "$file" ]]; then 
      if [[ ! -f "$file.gpg" && "$file" != *".html" ]]; then
        log_info "Encrypting and shredding $file"
        encrypt_file "$file" && shred_unencrypted_file $file
      else
        log_info "Shredding $file"
        shred_unencrypted_file $file
      fi
    fi
  done
}

decrypt_dir() {
  local file
  for file in $1/*.gpg; do
    decrypt_file $file
    case $? in
      0)
        log_info "Decrypted $file"
        ;;
      1)
        log_warn "$file already decrypted, skipping..."
        ;;
      2)
        log_error "Failed to decrypt $file, check key"
        return 1
        ;;
    esac
  done
}

decrypt_current_dir() {
  decrypt_dir $CURRENT_ENTRY_DIR
}
