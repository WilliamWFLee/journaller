read_passphrase() {
  local prompt="${1:-Enter passphrase: }"
  local var="${2:-PASSPHRASE}"
  read -rsp "$prompt" "$var"; echo
}

new_passphrase() {
  read_passphrase 'Enter passphrase: '
  if [[ -z "${PASSPHRASE}" ]]; then
    return 1
  fi

  local PASSPHRASE_CONFIRMATION
  read_passphrase 'Confirm passphrase: ' PASSPHRASE_CONFIRMATION
  if [[ "${PASSPHRASE}" != "${PASSPHRASE_CONFIRMATION}" ]]; then
    return 2
  fi
}

save_passphrase_to_keyring() {
  echo -n $PASSPHRASE | secret-tool store --label='Passphrase for journaller' application journaller
}

retrieve_old_style_passphrase() {
  secret-tool lookup service journaller username default application 'Python keyring library'
}

delete_old_style_passphrase() {
  secret-tool clear service journaller username default application 'Python keyring library'
}

retrieve_passphrase() {
  [[ ! -z "$PASSPHRASE" ]] && return 0
  PASSPHRASE="$(secret-tool lookup application journaller)"
  if [[ -z "$PASSPHRASE" ]]; then
    PASSPHRASE="$(retrieve_old_style_passphrase)"
    if [[ ! -z "$PASSPHRASE" ]]; then
      save_passphrase_to_keyring && delete_old_style_passphrase

      return 0
    fi
  fi

  return 1
}

set_and_save_new_passphrase() {
  if new_passphrase; then
    save_passphrase_to_keyring
    return 0
  else
    log_error 'Password not entered, or password confirmation does not match'
    return 1
  fi
}
